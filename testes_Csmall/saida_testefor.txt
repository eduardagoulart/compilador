-------Token Buffer------------
Token          | Num. da Linha | Lexema
----------------------------------------------- 
INT              1 		 int       
MAIN             1 		 main      
LBRACKET         1 		 (         
RBRACKET         1 		 )         
LBRACE           2 		 {         
INT              3 		 int       
ID               3 		 i         
COMMA            3 		 ,         
ID               3 		 j         
COMMA            3 		 ,         
ID               3 		 k         
PCOMMA           3 		 ;         
FLOAT            4 		 float     
ID               4 		 a         
ATTR             4 		 =         
INTEGER_CONST    4 		 1         
PCOMMA           4 		 ;         
READ             5 		 read      
ID               5 		 i         
PCOMMA           5 		 ;         
READ             6 		 read      
ID               6 		 k         
PCOMMA           6 		 ;         
FOR              7 		 for       
LBRACKET         7 		 (         
ID               7 		 j         
ATTR             7 		 =         
INTEGER_CONST    7 		 10        
PCOMMA           7 		 ;         
ID               7 		 j         
GE               7 		 >=        
INTEGER_CONST    7 		 1         
PCOMMA           7 		 ;         
ID               7 		 j         
ATTR             7 		 =         
ID               7 		 j         
MINUS            7 		 -         
INTEGER_CONST    7 		 1         
RBRACKET         7 		 )         
LBRACE           8 		 {         
IF               9 		 if        
LBRACKET         9 		 (         
ID               9 		 k         
EQ               9 		 ==        
INTEGER_CONST    9 		 2         
RBRACKET         9 		 )         
LBRACE           10 		 {         
ID               11 		 a         
ATTR             11 		 =         
ID               11 		 a         
MULT             11 		 *         
ID               11 		 i         
MINUS            11 		 -         
ID               11 		 j         
PCOMMA           11 		 ;         
ID               12 		 k         
ATTR             12 		 =         
INTEGER_CONST    12 		 1         
PCOMMA           12 		 ;         
RBRACE           13 		 }         
ELSE             14 		 else      
IF               14 		 if        
LBRACKET         14 		 (         
ID               14 		 k         
EQ               14 		 ==        
INTEGER_CONST    14 		 1         
RBRACKET         14 		 )         
LBRACE           15 		 {         
ID               16 		 a         
ATTR             16 		 =         
ID               16 		 a         
MULT             16 		 *         
ID               16 		 i         
PLUS             16 		 +         
ID               16 		 j         
PCOMMA           16 		 ;         
ID               17 		 k         
ATTR             17 		 =         
INTEGER_CONST    17 		 0         
PCOMMA           17 		 ;         
RBRACE           18 		 }         
ELSE             19 		 else      
LBRACE           19 		 {         
ID               20 		 k         
ATTR             20 		 =         
INTEGER_CONST    20 		 2         
PCOMMA           20 		 ;         
ID               21 		 a         
ATTR             21 		 =         
INTEGER_CONST    21 		 0         
PCOMMA           21 		 ;         
RBRACE           22 		 }         
PRINT            23 		 print     
LBRACKET         23 		 (         
ID               23 		 a         
RBRACKET         23 		 )         
PCOMMA           23 		 ;         
PRINT            24 		 print     
LBRACKET         24 		 (         
ID               24 		 k         
RBRACKET         24 		 )         
PCOMMA           24 		 ;         
RBRACE           25 		 }         
PRINT            26 		 print     
LBRACKET         26 		 (         
ID               26 		 a         
LT               26 		 <         
ID               26 		 i         
RBRACKET         26 		 )         
PCOMMA           26 		 ;         
RBRACE           27 		 }         
EOF              0 		           
---------------------------------
